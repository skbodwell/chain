// Code generated by protoc-gen-go.
// source: network.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SubmitTxRequest struct {
	Transaction []byte `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (m *SubmitTxRequest) Reset()                    { *m = SubmitTxRequest{} }
func (m *SubmitTxRequest) String() string            { return proto.CompactTextString(m) }
func (*SubmitTxRequest) ProtoMessage()               {}
func (*SubmitTxRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *SubmitTxRequest) GetTransaction() []byte {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type SubmitTxResponse struct {
	Ok    bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *SubmitTxResponse) Reset()                    { *m = SubmitTxResponse{} }
func (m *SubmitTxResponse) String() string            { return proto.CompactTextString(m) }
func (*SubmitTxResponse) ProtoMessage()               {}
func (*SubmitTxResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *SubmitTxResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *SubmitTxResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetBlockRequest struct {
	Height uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
}

func (m *GetBlockRequest) Reset()                    { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()               {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *GetBlockRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetBlockResponse struct {
	Block []byte `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Error *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *GetBlockResponse) Reset()                    { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()               {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *GetBlockResponse) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *GetBlockResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetSnapshotRequest struct {
	Height uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
}

func (m *GetSnapshotRequest) Reset()                    { *m = GetSnapshotRequest{} }
func (m *GetSnapshotRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotRequest) ProtoMessage()               {}
func (*GetSnapshotRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *GetSnapshotRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetSnapshotResponse struct {
	Data  []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *GetSnapshotResponse) Reset()                    { *m = GetSnapshotResponse{} }
func (m *GetSnapshotResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotResponse) ProtoMessage()               {}
func (*GetSnapshotResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *GetSnapshotResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetSnapshotResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetSnapshotInfoResponse struct {
	Height       uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	Size         uint64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	BlockchainId []byte `protobuf:"bytes,3,opt,name=blockchain_id,json=blockchainId,proto3" json:"blockchain_id,omitempty"`
	Error        *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *GetSnapshotInfoResponse) Reset()                    { *m = GetSnapshotInfoResponse{} }
func (m *GetSnapshotInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSnapshotInfoResponse) ProtoMessage()               {}
func (*GetSnapshotInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *GetSnapshotInfoResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetSnapshotInfoResponse) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GetSnapshotInfoResponse) GetBlockchainId() []byte {
	if m != nil {
		return m.BlockchainId
	}
	return nil
}

func (m *GetSnapshotInfoResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetBlockHeightResponse struct {
	Height uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	Error  *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *GetBlockHeightResponse) Reset()                    { *m = GetBlockHeightResponse{} }
func (m *GetBlockHeightResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlockHeightResponse) ProtoMessage()               {}
func (*GetBlockHeightResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *GetBlockHeightResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetBlockHeightResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type SignBlockRequest struct {
	Block []byte `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (m *SignBlockRequest) Reset()                    { *m = SignBlockRequest{} }
func (m *SignBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*SignBlockRequest) ProtoMessage()               {}
func (*SignBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *SignBlockRequest) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

type SignBlockResponse struct {
	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Error     *Error `protobuf:"bytes,9,opt,name=error" json:"error,omitempty"`
}

func (m *SignBlockResponse) Reset()                    { *m = SignBlockResponse{} }
func (m *SignBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*SignBlockResponse) ProtoMessage()               {}
func (*SignBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

func (m *SignBlockResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SignBlockResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*SubmitTxRequest)(nil), "pb.SubmitTxRequest")
	proto.RegisterType((*SubmitTxResponse)(nil), "pb.SubmitTxResponse")
	proto.RegisterType((*GetBlockRequest)(nil), "pb.GetBlockRequest")
	proto.RegisterType((*GetBlockResponse)(nil), "pb.GetBlockResponse")
	proto.RegisterType((*GetSnapshotRequest)(nil), "pb.GetSnapshotRequest")
	proto.RegisterType((*GetSnapshotResponse)(nil), "pb.GetSnapshotResponse")
	proto.RegisterType((*GetSnapshotInfoResponse)(nil), "pb.GetSnapshotInfoResponse")
	proto.RegisterType((*GetBlockHeightResponse)(nil), "pb.GetBlockHeightResponse")
	proto.RegisterType((*SignBlockRequest)(nil), "pb.SignBlockRequest")
	proto.RegisterType((*SignBlockResponse)(nil), "pb.SignBlockResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Node service

type NodeClient interface {
	SubmitTx(ctx context.Context, in *SubmitTxRequest, opts ...grpc.CallOption) (*SubmitTxResponse, error)
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
	GetSnapshot(ctx context.Context, in *GetSnapshotRequest, opts ...grpc.CallOption) (*GetSnapshotResponse, error)
	GetSnapshotInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetSnapshotInfoResponse, error)
	GetBlockHeight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetBlockHeightResponse, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) SubmitTx(ctx context.Context, in *SubmitTxRequest, opts ...grpc.CallOption) (*SubmitTxResponse, error) {
	out := new(SubmitTxResponse)
	err := grpc.Invoke(ctx, "/pb.Node/SubmitTx", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := grpc.Invoke(ctx, "/pb.Node/GetBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetSnapshot(ctx context.Context, in *GetSnapshotRequest, opts ...grpc.CallOption) (*GetSnapshotResponse, error) {
	out := new(GetSnapshotResponse)
	err := grpc.Invoke(ctx, "/pb.Node/GetSnapshot", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetSnapshotInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetSnapshotInfoResponse, error) {
	out := new(GetSnapshotInfoResponse)
	err := grpc.Invoke(ctx, "/pb.Node/GetSnapshotInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetBlockHeight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetBlockHeightResponse, error) {
	out := new(GetBlockHeightResponse)
	err := grpc.Invoke(ctx, "/pb.Node/GetBlockHeight", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Node service

type NodeServer interface {
	SubmitTx(context.Context, *SubmitTxRequest) (*SubmitTxResponse, error)
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error)
	GetSnapshot(context.Context, *GetSnapshotRequest) (*GetSnapshotResponse, error)
	GetSnapshotInfo(context.Context, *Empty) (*GetSnapshotInfoResponse, error)
	GetBlockHeight(context.Context, *Empty) (*GetBlockHeightResponse, error)
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_SubmitTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).SubmitTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Node/SubmitTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).SubmitTx(ctx, req.(*SubmitTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Node/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Node/GetSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetSnapshot(ctx, req.(*GetSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetSnapshotInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetSnapshotInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Node/GetSnapshotInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetSnapshotInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetBlockHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetBlockHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Node/GetBlockHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetBlockHeight(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitTx",
			Handler:    _Node_SubmitTx_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _Node_GetBlock_Handler,
		},
		{
			MethodName: "GetSnapshot",
			Handler:    _Node_GetSnapshot_Handler,
		},
		{
			MethodName: "GetSnapshotInfo",
			Handler:    _Node_GetSnapshotInfo_Handler,
		},
		{
			MethodName: "GetBlockHeight",
			Handler:    _Node_GetBlockHeight_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "network.proto",
}

// Client API for Signer service

type SignerClient interface {
	SignBlock(ctx context.Context, in *SignBlockRequest, opts ...grpc.CallOption) (*SignBlockResponse, error)
}

type signerClient struct {
	cc *grpc.ClientConn
}

func NewSignerClient(cc *grpc.ClientConn) SignerClient {
	return &signerClient{cc}
}

func (c *signerClient) SignBlock(ctx context.Context, in *SignBlockRequest, opts ...grpc.CallOption) (*SignBlockResponse, error) {
	out := new(SignBlockResponse)
	err := grpc.Invoke(ctx, "/pb.Signer/SignBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Signer service

type SignerServer interface {
	SignBlock(context.Context, *SignBlockRequest) (*SignBlockResponse, error)
}

func RegisterSignerServer(s *grpc.Server, srv SignerServer) {
	s.RegisterService(&_Signer_serviceDesc, srv)
}

func _Signer_SignBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).SignBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Signer/SignBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).SignBlock(ctx, req.(*SignBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Signer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Signer",
	HandlerType: (*SignerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignBlock",
			Handler:    _Signer_SignBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "network.proto",
}

func init() { proto.RegisterFile("network.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x54, 0xcb, 0x8e, 0xd3, 0x30,
	0x14, 0x6d, 0x43, 0xa7, 0x9a, 0xdc, 0x76, 0x66, 0x8a, 0x67, 0xe8, 0x44, 0x01, 0x89, 0xca, 0x6c,
	0x8a, 0x84, 0xba, 0xe8, 0x2c, 0x10, 0xb0, 0x41, 0x3c, 0x54, 0xca, 0x02, 0x89, 0x94, 0x3d, 0xca,
	0xc3, 0x34, 0x56, 0x88, 0x1d, 0x1c, 0x57, 0x3c, 0x7e, 0x81, 0xbf, 0xe1, 0x0b, 0x51, 0x6c, 0xa7,
	0x71, 0x02, 0xa3, 0xec, 0xec, 0xa3, 0x73, 0xef, 0xb9, 0xbe, 0xe7, 0x24, 0x70, 0xc6, 0x88, 0xfc,
	0xce, 0x45, 0xb6, 0x2a, 0x04, 0x97, 0x1c, 0x39, 0x45, 0xe4, 0x4f, 0x63, 0x9e, 0xe7, 0x9c, 0x69,
	0x04, 0xdf, 0xc0, 0xc5, 0xee, 0x10, 0xe5, 0x54, 0x7e, 0xfa, 0x11, 0x90, 0x6f, 0x07, 0x52, 0x4a,
	0xb4, 0x80, 0x89, 0x14, 0x21, 0x2b, 0xc3, 0x58, 0x52, 0xce, 0xbc, 0xe1, 0x62, 0xb8, 0x9c, 0x06,
	0x36, 0x84, 0x5f, 0xc3, 0xac, 0x29, 0x2a, 0x0b, 0xce, 0x4a, 0x82, 0xce, 0xc1, 0xe1, 0x99, 0x22,
	0x9f, 0x06, 0x0e, 0xcf, 0xd0, 0x43, 0x38, 0x21, 0x42, 0x70, 0xe1, 0xb9, 0x8b, 0xe1, 0x72, 0xb2,
	0x76, 0x57, 0x45, 0xb4, 0x7a, 0x5b, 0x01, 0x81, 0xc6, 0xf1, 0x63, 0xb8, 0xd8, 0x10, 0xf9, 0xea,
	0x2b, 0x8f, 0xb3, 0x5a, 0x79, 0x0e, 0xe3, 0x94, 0xd0, 0x7d, 0x2a, 0x55, 0x9f, 0x51, 0x60, 0x6e,
	0x78, 0x0b, 0xb3, 0x86, 0x6a, 0xf4, 0xae, 0xe0, 0x24, 0xaa, 0x00, 0x33, 0x9f, 0xbe, 0xf4, 0xab,
	0x3e, 0x01, 0xb4, 0x21, 0x72, 0xc7, 0xc2, 0xa2, 0x4c, 0xb9, 0xec, 0x13, 0x7e, 0x0f, 0x97, 0x2d,
	0xb6, 0xd1, 0x46, 0x30, 0x4a, 0x42, 0x19, 0x1a, 0x69, 0x75, 0xee, 0x57, 0xfe, 0x3d, 0x84, 0x6b,
	0xab, 0xd9, 0x96, 0x7d, 0xe1, 0xc7, 0x86, 0xb7, 0xe8, 0x57, 0x42, 0x25, 0xfd, 0x45, 0x3c, 0x47,
	0xa1, 0xea, 0x8c, 0x1e, 0xc1, 0x99, 0x7a, 0x6b, 0x9c, 0x86, 0x94, 0x7d, 0xa6, 0x89, 0x77, 0x47,
	0x4d, 0x31, 0x6d, 0xc0, 0x6d, 0xd2, 0x3f, 0xcd, 0x47, 0x98, 0xd7, 0x2b, 0x7d, 0xa7, 0xb4, 0x7a,
	0x67, 0xe9, 0x6d, 0xb9, 0x84, 0xd9, 0x8e, 0xee, 0x59, 0xcb, 0xd1, 0xff, 0xba, 0x84, 0x03, 0xb8,
	0x6b, 0x31, 0x8d, 0xee, 0x03, 0x70, 0x4b, 0xba, 0x67, 0xa1, 0x3c, 0x08, 0x62, 0xe8, 0x0d, 0xd0,
	0xab, 0xbe, 0xfe, 0xe3, 0xc0, 0xe8, 0x03, 0x4f, 0x08, 0x7a, 0x0a, 0xa7, 0x75, 0x38, 0xd1, 0x65,
	0x45, 0xeb, 0xe4, 0xdb, 0xbf, 0x6a, 0x83, 0x5a, 0x1e, 0x0f, 0xaa, 0xc2, 0x7a, 0x25, 0xba, 0xb0,
	0x13, 0x4f, 0x5d, 0xd8, 0x0d, 0x22, 0x1e, 0xa0, 0x97, 0x30, 0xb1, 0x8c, 0x45, 0x73, 0x43, 0xeb,
	0x84, 0xcc, 0xbf, 0xfe, 0x07, 0x3f, 0x76, 0x78, 0xa1, 0xbe, 0x05, 0x3b, 0x1a, 0x48, 0xbf, 0x30,
	0x2f, 0xe4, 0x4f, 0xff, 0x7e, 0xa7, 0xd0, 0x8e, 0x0e, 0x1e, 0xa0, 0x67, 0x70, 0xde, 0xb6, 0xd2,
	0xae, 0xf5, 0xed, 0x99, 0xdb, 0x4e, 0xe3, 0xc1, 0xfa, 0x0d, 0x8c, 0x2b, 0x23, 0x88, 0x40, 0xcf,
	0xc1, 0x3d, 0x5a, 0x82, 0xf4, 0x86, 0x3a, 0x5e, 0xfa, 0xf7, 0x3a, 0x68, 0xdd, 0x25, 0x1a, 0xab,
	0x5f, 0xc9, 0xcd, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x96, 0x2c, 0x13, 0xc6, 0x6d, 0x04, 0x00,
	0x00,
}
